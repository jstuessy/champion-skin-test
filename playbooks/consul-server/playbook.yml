---
- name: Setup Consul Server
  hosts: subject_consul_server
  vars:
    consul_version: "1.9.5"
  tasks:
    - amazon.aws.ec2_metadata_facts:
    - import_role:
        name: general-setup
    - import_role:
        name: consul-install
    - import_role:
        name: consul-encryption-key-check
    - name: Find or generate consul encryption key
      block:
      - name: Generate keygen
        command: consul keygen
        register: consul_keygen
        run_once: true
        when: consul_key_file_check.stat.isfile is not defined
      - name: Write new Consul encryption key to local file
        delegate_to: "localhost"
        when: consul_key_file_check.stat.isfile is not defined
        run_once: true
        ansible.builtin.copy:
          content: "{{ consul_keygen.stdout }}"
          dest: "/tmp/consul_key.txt"
      - name: Register new Consul encryption key
        delegate_to: "localhost"
        when: consul_key_file_check.stat.isfile is not defined
        ansible.builtin.set_fact:
          consul_key: "{{ lookup('file', '/tmp/consul_key.txt') }}"
    - name: Determine which server will be the Bootstrap server
      run_once: true
      set_fact:
        bootstrap_hostname: "{{ ansible_play_hosts | random }}"
    - name: Tag the bootstrap server
      delegate_to: 127.0.0.1
      when: inventory_hostname == bootstrap_hostname
      amazon.aws.ec2_tag:
        resource: "{{ ansible_ec2_instance_id }}"
        tags:
          # TODO: terraform -> ansible -> terraform, diff
          consul_ui: true
        state: present
        region: us-west-2
    # https://learn.hashicorp.com/tutorials/consul/deployment-guide#generate-tls-certificates-for-rpc-encryption
    # - name: Generate tls certificates for rpc encryption
    #   command: consul tls ca create
    - name: Copy consul configuration to servers
      become: true
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "/etc/consul.d/{{ item }}"
        mode: "640"
        owner: consul
        group: consul
      loop:
        - server.hcl
      vars:
        consul_ui: "{{ inventory_hostname == bootstrap_hostname }}"
        retry_join_servers: "{{ groups.subject_consul_server }}"
    # https://learn.hashicorp.com/tutorials/consul/deployment-guide#configure-systemd
    - name: Copy over systemd service file
      become: true
      ansible.builtin.template:
        src: consul-server.service.j2
        dest: /usr/lib/systemd/system/consul-server.service
        mode: "660"
        owner: consul
        group: consul
    # https://learn.hashicorp.com/tutorials/consul/deployment-guide#start-the-consul-service
    - name: Validate consul configuration
      become: true
      command: "consul validate /etc/consul.d/{{ item }}"
      loop:
        - server.hcl
    - name: Reload Daemon
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
    - name: Enable consul service
      become: true
      ansible.builtin.systemd:
        name: consul-server
        enabled: true
    - name: Start consul service
      become: true
      ansible.builtin.systemd:
        name: consul-server
        state: started
    - name: Restart consul service
      become: true
      ansible.builtin.systemd:
        name: consul-server
        state: restarted
